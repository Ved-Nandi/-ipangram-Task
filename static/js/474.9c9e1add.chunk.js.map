{"version":3,"file":"static/js/474.9c9e1add.chunk.js","mappings":"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","sources":["components/hook/debounce.tsx","components/form/commentBox.tsx","components/form/index.tsx","components/table/index.tsx","routes/home/home.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\n\r\nexport const useDebounce: <T>(value: T, delay: number) => T =(value, delay) => {\r\n  const [debouncedValue, setDebouncedValue] = useState< typeof value >(value);\r\n\r\n  useEffect(() => {\r\n    const timer = setTimeout(() => {\r\n      setDebouncedValue(value);\r\n    }, delay);\r\n\r\n    return () => {\r\n      clearTimeout(timer);\r\n    };\r\n  }, [value, delay]);\r\n\r\n  return debouncedValue;\r\n};\r\n\r\nexport default useDebounce;\r\n","import React, {\r\n  useState,\r\n  useDeferredValue,\r\n  useEffect,\r\n} from 'react'\r\nimport { TextField } from '@mui/material';\r\nimport type { IForm } from './form.interface';\r\n\r\n// we can use debounce as well for more performance boost\r\nimport useDebounce from '../hook/debounce'\r\n\r\n\r\ntype Props = {\r\n  handleChange: (key: keyof IForm) => (event: React.ChangeEvent<HTMLInputElement>, value?: any) => void,\r\n}\r\n\r\nconst CommentBox = ({\r\n  handleChange,\r\n}: Props) => {\r\n  const [text, setText] = useState('');\r\n\r\n\r\n  // deferd value to avoid unnecessary rerender\r\n  // const deferredText = useDeferredValue(text);\r\n  // useEffect(() => {\r\n  //   handleChange('other')({} as any, deferredText)\r\n  // }\r\n  //   , [deferredText])\r\n\r\n  // debounce for even more performance\r\n\r\n  const debouncedValue = useDebounce(text, 500);\r\n  useEffect(() => {\r\n    handleChange('other')({} as any, text)\r\n  }\r\n    , [debouncedValue])\r\n\r\n  return (\r\n    <TextField\r\n      value={text}\r\n      onChange={(e) => setText(e.target.value)}\r\n      fullWidth id=\"outlined-basic\" variant=\"outlined\" multiline rows={4} placeholder=\"Other? For example in rotations. side bends, wing stairs. when working with the arms above the head.\" />\r\n  )\r\n}\r\n\r\nexport default CommentBox","import React, { useEffect, useState } from 'react'\r\nimport Radio from '@mui/material/Radio';\r\nimport RadioGroup from '@mui/material/RadioGroup';\r\nimport FormControlLabel from '@mui/material/FormControlLabel';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport FormLabel from '@mui/material/FormLabel';\r\nimport { FormGroup, Checkbox } from '@mui/material';\r\nimport CommentBox from './commentBox';\r\nimport useDebounce from '../hook/debounce';\r\nimport { IForm } from './form.interface';\r\n\r\nexport type {\r\n  IForm,\r\n};\r\n\r\ntype Props = {\r\n  data: IForm,\r\n  formData: IForm[],\r\n  setFormData: React.Dispatch<React.SetStateAction<IForm[]>>,\r\n  index: number\r\n}\r\n\r\nexport const IFormData = {\r\n  diagnosed_with_problem: '',\r\n  physical_trauma_start_after: '',\r\n  mental_trauma_start_after: '',\r\n  how_often_do_you_experi_problem: '',\r\n  notRelevent: false,\r\n  whenLyingDown: false,\r\n  whenSitting: false,\r\n  whenStanding: false,\r\n  whenWalking: false,\r\n  other: '',\r\n  how_intensive_is_the_experience: '',\r\n  id: 0,\r\n}\r\n\r\nconst Form = ({\r\n  data,\r\n  setFormData,\r\n  formData,\r\n  index,\r\n}: Props) => {\r\n\r\n  const [tempFormData, setTempFormData] = useState<IForm>(structuredClone(data));\r\n  const debouncedTempFormData = useDebounce(tempFormData, 500);\r\n  useEffect(() => {\r\n    setFormData((prevState) => {\r\n      const newFormData = structuredClone(prevState);\r\n      newFormData[index] = structuredClone(debouncedTempFormData);\r\n      return structuredClone(newFormData);\r\n    })\r\n\r\n  }, [debouncedTempFormData])\r\n\r\n  const handleChange = (key: keyof IForm) => (event: React.ChangeEvent<HTMLInputElement>, value?: any) => {\r\n\r\n    setTempFormData((prevState) => ({\r\n      ...prevState,\r\n      [key]: value ?? event.target.value\r\n    }))\r\n\r\n  }\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        marginTop: '1rem'\r\n      }}\r\n    >\r\n      <div style={{ maxWidth: '90%' }}>\r\n        <div style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', marginBottom: '1rem' }}>\r\n          <FormLabel id=\"demo-row-radio-buttons-group-label\">Have you been diagnosed with this problem?</FormLabel>\r\n          <RadioGroup\r\n            row\r\n\r\n            name=\"row-radio-buttons-group\"\r\n            value={tempFormData.diagnosed_with_problem}\r\n            onChange={handleChange('diagnosed_with_problem')}\r\n          >\r\n            <FormControlLabel value=\"Not relevent\" control={<Radio />} label=\"Not relevent \" />\r\n            <FormControlLabel value=\"Yes\" control={<Radio />} label=\"yes\" />\r\n            <FormControlLabel value=\"NO\" control={<Radio />} label=\"No\" />\r\n\r\n          </RadioGroup>\r\n        </div>\r\n        <div style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', marginBottom: '1rem' }}>\r\n          <FormLabel id=\"demo-row-radio-buttons-group-label\">Did the problem start after a physical trauma?</FormLabel>\r\n          <RadioGroup\r\n            row\r\n\r\n            name=\"row-radio-buttons-group\"\r\n            value={tempFormData.physical_trauma_start_after}\r\n            onChange={handleChange('physical_trauma_start_after')}\r\n          >\r\n            <FormControlLabel value=\"Not relevent\" control={<Radio />} label=\"Not relevent \" />\r\n            <FormControlLabel value=\"Yes\" control={<Radio />} label=\"yes\" />\r\n            <FormControlLabel value=\"NO\" control={<Radio />} label=\"No\" />\r\n\r\n          </RadioGroup>\r\n        </div>\r\n        <div style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', marginBottom: '1rem' }}>\r\n          <FormLabel id=\"demo-row-radio-buttons-group-label\">Did the problem start after a mental trauma?</FormLabel>\r\n          <RadioGroup\r\n            row\r\n\r\n            name=\"row-radio-buttons-group\"\r\n            value={tempFormData.mental_trauma_start_after}\r\n            onChange={handleChange('mental_trauma_start_after')}\r\n          >\r\n            <FormControlLabel value=\"Not relevent\" control={<Radio />} label=\"Not relevent \" />\r\n            <FormControlLabel value=\"Yes\" control={<Radio />} label=\"yes\" />\r\n            <FormControlLabel value=\"NO\" control={<Radio />} label=\"No\" />\r\n\r\n          </RadioGroup>\r\n        </div>\r\n        <div style={{ marginBottom: '1rem' }} >\r\n          <FormControl>\r\n            <FormLabel id=\"demo-row-radio-buttons-group-label\">How often do you experience the problem?</FormLabel>\r\n            <RadioGroup\r\n              row\r\n\r\n              name=\"row-radio-buttons-group\"\r\n              value={tempFormData.how_often_do_you_experi_problem}\r\n              onChange={handleChange('how_often_do_you_experi_problem')}\r\n            >\r\n              <FormControlLabel value=\"female\" control={<Radio />} label=\"Not relevent\" />\r\n              <FormControlLabel value=\"male\" control={<Radio />} label=\"Daily\" />\r\n              <FormControlLabel value=\"SeverlsTime\" control={<Radio />} label=\"Severls time/week\" />\r\n              <FormControlLabel value=\"feviewMonth\" control={<Radio />} label=\"Feview times/month\" />\r\n              <FormControlLabel value=\"feviewYear\" control={<Radio />} label=\"Feview times/year\" />\r\n            </RadioGroup>\r\n          </FormControl>\r\n        </div>\r\n        <div\r\n          style={{\r\n            display: 'flex',\r\n            gap: '1rem',\r\n            marginBottom: '1rem'\r\n          }}\r\n        >\r\n          <FormControl>\r\n            <FormLabel id=\"demo-row-radio-buttons-group-label\">When do u experiance the probem?</FormLabel>\r\n            <FormGroup\r\n            >\r\n              <FormControlLabel control={<Checkbox\r\n                checked={tempFormData.notRelevent}\r\n                onChange={handleChange('notRelevent')}\r\n                value=\"notRelevent\"\r\n              />} label=\"Not relevent\" />\r\n              <FormControlLabel control={<Checkbox\r\n                checked={tempFormData.whenLyingDown}\r\n                value=\"whenLyingDown\"\r\n                onChange={handleChange('whenLyingDown')}\r\n              />} label=\"when laying down\" />\r\n              <FormControlLabel control={<Checkbox\r\n                checked={tempFormData.whenSitting}\r\n                value=\"whenSitting\"\r\n                onChange={handleChange('whenSitting')}\r\n              />} label=\"When sitting\" />\r\n              <FormControlLabel control={<Checkbox\r\n                checked={tempFormData.whenStanding}\r\n                value=\"whenStanding\"\r\n                onChange={handleChange('whenStanding')}\r\n              />} label=\"under standing\" />\r\n              <FormControlLabel control={<Checkbox\r\n                checked={tempFormData.whenWalking}\r\n                value=\"whenWalking\"\r\n                onChange={handleChange('whenWalking')}\r\n              />} label=\"in walking\" />\r\n            </FormGroup>\r\n          </FormControl>\r\n          <div style={{ flexGrow: 1, marginTop: '3rem' }}>\r\n            <CommentBox handleChange={handleChange} />\r\n          </div>\r\n        </div>\r\n        <div>\r\n          <div style={{ marginBottom: '1rem' }} >\r\n            <FormControl>\r\n              <FormLabel id=\"demo-row-radio-buttons-group-label\">How often do you experience the problem?</FormLabel>\r\n              <RadioGroup\r\n                row\r\n\r\n                name=\"row-radio-buttons-group\"\r\n                value={tempFormData.how_often_do_you_experi_problem}\r\n                onChange={handleChange('how_often_do_you_experi_problem')}\r\n              >\r\n                <FormControlLabel labelPlacement='top' value=\"1\" control={<Radio />} label=\"1\" />\r\n                <FormControlLabel labelPlacement='top' value=\"2\" control={<Radio />} label=\"2\" />\r\n                <FormControlLabel labelPlacement='top' value=\"3\" control={<Radio />} label=\"3\" />\r\n                <FormControlLabel labelPlacement='top' value=\"4\" control={<Radio />} label=\"4\" />\r\n                <FormControlLabel labelPlacement='top' value=\"5\" control={<Radio />} label=\"5\" />\r\n                <FormControlLabel labelPlacement='top' value=\"6\" control={<Radio />} label=\"6\" />\r\n                <FormControlLabel labelPlacement='top' value=\"7\" control={<Radio />} label=\"7\" />\r\n                <FormControlLabel labelPlacement='top' value=\"8\" control={<Radio />} label=\"8\" />\r\n                <FormControlLabel labelPlacement='top' value=\"9\" control={<Radio />} label=\"9\" />\r\n                <FormControlLabel labelPlacement='top' value=\"10\" control={<Radio />} label=\"10\" />\r\n\r\n              </RadioGroup>\r\n            </FormControl>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Form","import React from 'react'\r\nimport { DataGrid, GridRowsProp, GridColDef } from '@mui/x-data-grid';\r\nimport { IForm } from \"../form\";\r\n\r\ntype Props = {\r\n  formData: IForm[],\r\n}\r\n\r\nconst columns: GridColDef[] = [\r\n  {\r\n    field: 'diagnosed_with_problem', headerName: 'diagnosed with problem', flex: 1,\r\n    minWidth: 150,\r\n  },\r\n  {\r\n    field: 'physical_trauma_start_after', headerName: 'physical trauma start after', flex: 1,\r\n    minWidth: 150,\r\n  },\r\n  {\r\n    field: 'mental_trauma_start_after', headerName: 'mental trauma start after', flex: 1,\r\n    minWidth: 150,\r\n  },\r\n  {\r\n    field: 'how_often_do_you_experi_problem', headerName: 'how often do you experi problem', flex: 1,\r\n    minWidth: 150,\r\n  },\r\n  {\r\n    field: 'notRelevent', headerName: 'When do u experiance the probem?',\r\n    renderCell: (params) => (<>\r\n      {\r\n        `\r\n        ${params.row.notRelevent},\r\n        ${params.row.whenLyingDown},\r\n        ${params.row.whenSitting},\r\n        ${params.row.whenStanding},\r\n        ${params.row.whenWalking},\r\n        ${params.row.other},\r\n        `\r\n      }\r\n    </>),\r\n    flex: 1,\r\n    minWidth: 150,\r\n\r\n  },\r\n  {\r\n    field: 'how_intensive_is_the_experience', headerName: 'how intensive is the experience', flex: 1,\r\n    minWidth: 150,\r\n  },\r\n\r\n];\r\nconst Table = ({ formData }: Props) => {\r\n  console.log({formData})\r\n  return (\r\n    <div style={{ minHeight: '70vh', width: '100%', marginTop: '1rem' }}>\r\n      <DataGrid rows={formData} columns={columns} />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Table","import React, { useState } from \"react\";\r\nimport { Divider, Typography, IconButton, useTheme, Button } from \"@mui/material\";\r\nimport AddRoundedIcon from '@mui/icons-material/AddRounded';\r\nimport Form, { IForm, IFormData } from \"../../components/form\";\r\nimport Table from \"../../components/table\";\r\n\r\nconst Home = () => {\r\n\r\n  const theme = useTheme();\r\n  const [formData, setFormData] = useState<IForm[]>([structuredClone(IFormData)])\r\n  const [isTable, setIsTable] = useState(false);\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        paddingBottom: '3rem'\r\n      }}\r\n    >\r\n      <div\r\n        style={{\r\n          maxWidth: '60%',\r\n        }}\r\n      >\r\n        <header>\r\n          <Typography variant=\"h6\" color=\"rgb(48, 108, 160)\"\r\n            sx={{\r\n              textAlign: \"center\",\r\n              fontWeight: \"bold\",\r\n            }}\r\n          >\r\n            Pain & Functional Description\r\n          </Typography>\r\n          <div style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n            <Typography\r\n              variant=\"body2\"\r\n              sx={{\r\n                textAlign: \"center\",\r\n                maxWidth: \"50%\",\r\n              }}\r\n            >\r\n              The description of the current situation gives your Optimum\r\n              Trainer a picture of and clues to the underlying causes of your\r\n              problems\r\n            </Typography>\r\n\r\n          </div>\r\n\r\n          <Typography\r\n            sx={{ mt: '0.5rem' }}\r\n            variant=\"body2\"\r\n          >\r\n            If you have problems with pain/aches, stiffness, weakness or functional problems, describe\r\n            <br />\r\n            this/these below. (List the symptoms in descending order with the most troublesome first)\r\n          </Typography>\r\n          <div style={{\r\n            height: '4rem',\r\n            border: 'gray solid 1px',\r\n            borderRadius: '0.5rem',\r\n          }}>\r\n\r\n          </div>\r\n        </header>\r\n        {\r\n          isTable ?\r\n            (\r\n\r\n              <Table formData={formData} />\r\n            ) :\r\n            (\r\n\r\n              <article style={{\r\n                marginBottom: '1rem'\r\n              }}>\r\n                {\r\n                  formData.map((form, index) => (\r\n                    <React.Fragment key={index}>\r\n                      <Form\r\n                        formData={formData}\r\n                        setFormData={setFormData}\r\n                        data={form}\r\n                        index={index}\r\n                      />\r\n                      <Divider>\r\n                        {\r\n                          formData.length === index + 1 ? (\r\n                            <>\r\n                              <IconButton\r\n                                onClick={() => setFormData((prevState) => {\r\n                                  const newFormData = structuredClone(formData);\r\n                                  const newForm = structuredClone(IFormData);\r\n                                  newForm.id = prevState.length + 1;\r\n                                  return [...newFormData, newForm];\r\n                                })}\r\n                                sx={{ bgcolor: theme.palette.primary.main, color: 'white' }} size=\"small\" aria-label=\"delete\">\r\n                                <AddRoundedIcon />\r\n                              </IconButton>\r\n                            </>\r\n                          ) :\r\n                            (\r\n                              <Typography key={index}>\r\n                                Form No {index + 2}\r\n                              </Typography>\r\n                            )\r\n                        }\r\n                      </Divider>\r\n                    </React.Fragment>\r\n                  ))\r\n                }\r\n              </article>\r\n            )\r\n        }\r\n\r\n        <div\r\n          style={{\r\n            display: 'flex',\r\n            justifyContent: 'center',\r\n          }}\r\n        >\r\n          <div style={{ display: 'flex', gap: '1rem' }} >\r\n            <Button onClick={() => setIsTable(false)} disabled={!isTable} variant=\"contained\">Back</Button>\r\n            <Button\r\n              onClick={() => setIsTable(true)}\r\n              disabled={isTable}\r\n              variant=\"contained\" >Next</Button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n"],"names":["value","delay","_useState","useState","_useState2","_slicedToArray","debouncedValue","setDebouncedValue","useEffect","timer","setTimeout","clearTimeout","_ref","handleChange","text","setText","useDebounce","_jsx","TextField","onChange","e","target","fullWidth","id","variant","multiline","rows","placeholder","IFormData","diagnosed_with_problem","physical_trauma_start_after","mental_trauma_start_after","how_often_do_you_experi_problem","notRelevent","whenLyingDown","whenSitting","whenStanding","whenWalking","other","how_intensive_is_the_experience","data","setFormData","index","formData","structuredClone","tempFormData","setTempFormData","debouncedTempFormData","prevState","newFormData","key","event","_objectSpread","_defineProperty","style","marginTop","children","_jsxs","maxWidth","display","justifyContent","alignItems","marginBottom","FormLabel","RadioGroup","row","name","FormControlLabel","control","Radio","label","FormControl","gap","FormGroup","Checkbox","checked","flexGrow","CommentBox","labelPlacement","columns","field","headerName","flex","minWidth","renderCell","params","_Fragment","concat","console","log","minHeight","width","DataGrid","theme","useTheme","_useState3","_useState4","isTable","setIsTable","paddingBottom","Typography","color","sx","textAlign","fontWeight","mt","height","border","borderRadius","Table","map","form","React","Form","Divider","length","IconButton","onClick","newForm","_toConsumableArray","bgcolor","palette","primary","main","size","AddRoundedIcon","Button","disabled"],"sourceRoot":""}